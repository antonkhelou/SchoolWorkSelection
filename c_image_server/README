To compile:  
	Server: “gcc server.c –o server –lpthread”  
	Client: “gcc client.c –o client –lpthread”

The images must be generated from a “source.png” file located in the /pictures/ folder. The source image can be replaced by any image. The current server/client only supports images up to 500Kbytes due to the size of the buffer being used. The images are generated by running the shell script “imgscript.sh”. One hundred images with unique names will be generated. 

	Server usage: “./server [control port#] [data port#]”  
	Client usage: “./client [server IP]”  
	Launcher usage: “./batch_launcher.sh [server IP]”  

The clients are compiled with a fixed port number for both data and control sockets. The default values are 5003 for control port and 5004 for data port. Thus, the corresponding server usage wil be: “./server 5003 5004”  

The clients can be launched using a shell script “batch_launcher.sh”. The shell script takes one input argument being the IP address of the server. If no argument is used, the server is assumed to be 127.0.0.1 (localhost).  

The clients will download the images in the folder “/downloadedimages/”. Subfolders using the client PID as name will be generated to separate the images for each client launched withint the host.  

The client will create a log file to record which image requests are received and how much time delay each request took. The generated file is ‘log_[pid].txt’. The last column indicates the number of images received in time. 